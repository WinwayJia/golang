// Code generated by protoc-gen-go.
// source: UserRmbRpcDef.proto
// DO NOT EDIT!

/*
Package UserRmbRpcDef is a generated protocol buffer package.

It is generated from these files:
	UserRmbRpcDef.proto

It has these top-level messages:
	GetUserRmbRQ
	GetUserRmbRS
	ChargeUserRmbRQ
	ChargeUserRmbRS
	ConsumeUserRmbRQ
	ConsumeUserRmbRS
	ExchangeUserRmbForDiamondRQ
	ExchangeUserRmbForDiamondRS
	ExchangeUserRmbForDiamondFailed
*/
package UserRmbRpcDef

import proto "github.com/golang/protobuf/proto"
import math "math"
import MessageType "cltx/MessageType"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type ENUM_USER_RMB_ORDER_TYPE int32

const (
	ENUM_USER_RMB_ORDER_TYPE_ENUM_USER_RMB_ORDER_TYPE_CHARGE   ENUM_USER_RMB_ORDER_TYPE = 201
	ENUM_USER_RMB_ORDER_TYPE_ENUM_USER_RMB_ORDER_TYPE_EXCHANGE ENUM_USER_RMB_ORDER_TYPE = 202
	ENUM_USER_RMB_ORDER_TYPE_ENUM_USER_RMB_ORDER_TYPE_CONSUME  ENUM_USER_RMB_ORDER_TYPE = 203
	ENUM_USER_RMB_ORDER_TYPE_ENUM_USER_RMB_ORDER_TYPE_LOOT     ENUM_USER_RMB_ORDER_TYPE = 204
)

var ENUM_USER_RMB_ORDER_TYPE_name = map[int32]string{
	201: "ENUM_USER_RMB_ORDER_TYPE_CHARGE",
	202: "ENUM_USER_RMB_ORDER_TYPE_EXCHANGE",
	203: "ENUM_USER_RMB_ORDER_TYPE_CONSUME",
	204: "ENUM_USER_RMB_ORDER_TYPE_LOOT",
}
var ENUM_USER_RMB_ORDER_TYPE_value = map[string]int32{
	"ENUM_USER_RMB_ORDER_TYPE_CHARGE":   201,
	"ENUM_USER_RMB_ORDER_TYPE_EXCHANGE": 202,
	"ENUM_USER_RMB_ORDER_TYPE_CONSUME":  203,
	"ENUM_USER_RMB_ORDER_TYPE_LOOT":     204,
}

func (x ENUM_USER_RMB_ORDER_TYPE) Enum() *ENUM_USER_RMB_ORDER_TYPE {
	p := new(ENUM_USER_RMB_ORDER_TYPE)
	*p = x
	return p
}
func (x ENUM_USER_RMB_ORDER_TYPE) String() string {
	return proto.EnumName(ENUM_USER_RMB_ORDER_TYPE_name, int32(x))
}
func (x *ENUM_USER_RMB_ORDER_TYPE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ENUM_USER_RMB_ORDER_TYPE_value, data, "ENUM_USER_RMB_ORDER_TYPE")
	if err != nil {
		return err
	}
	*x = ENUM_USER_RMB_ORDER_TYPE(value)
	return nil
}

type ENUM_USER_RMB_EXCHANGE_TYPE int32

const (
	ENUM_USER_RMB_EXCHANGE_TYPE_ENUM_USER_RMB_EXCHANGE_FOR_DIAMOND ENUM_USER_RMB_EXCHANGE_TYPE = 101
)

var ENUM_USER_RMB_EXCHANGE_TYPE_name = map[int32]string{
	101: "ENUM_USER_RMB_EXCHANGE_FOR_DIAMOND",
}
var ENUM_USER_RMB_EXCHANGE_TYPE_value = map[string]int32{
	"ENUM_USER_RMB_EXCHANGE_FOR_DIAMOND": 101,
}

func (x ENUM_USER_RMB_EXCHANGE_TYPE) Enum() *ENUM_USER_RMB_EXCHANGE_TYPE {
	p := new(ENUM_USER_RMB_EXCHANGE_TYPE)
	*p = x
	return p
}
func (x ENUM_USER_RMB_EXCHANGE_TYPE) String() string {
	return proto.EnumName(ENUM_USER_RMB_EXCHANGE_TYPE_name, int32(x))
}
func (x *ENUM_USER_RMB_EXCHANGE_TYPE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ENUM_USER_RMB_EXCHANGE_TYPE_value, data, "ENUM_USER_RMB_EXCHANGE_TYPE")
	if err != nil {
		return err
	}
	*x = ENUM_USER_RMB_EXCHANGE_TYPE(value)
	return nil
}

type GetUserRmbRQ struct {
	UserId           *uint64 `protobuf:"varint,1,req,name=user_id" json:"user_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GetUserRmbRQ) Reset()         { *m = GetUserRmbRQ{} }
func (m *GetUserRmbRQ) String() string { return proto.CompactTextString(m) }
func (*GetUserRmbRQ) ProtoMessage()    {}

func (m *GetUserRmbRQ) GetUserId() uint64 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

type GetUserRmbRS struct {
	UserId           *uint64                `protobuf:"varint,1,req,name=user_id" json:"user_id,omitempty"`
	Rmb              *uint64                `protobuf:"varint,2,req,name=rmb" json:"rmb,omitempty"`
	ErrInfo          *MessageType.ErrorInfo `protobuf:"bytes,5,opt,name=err_info" json:"err_info,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *GetUserRmbRS) Reset()         { *m = GetUserRmbRS{} }
func (m *GetUserRmbRS) String() string { return proto.CompactTextString(m) }
func (*GetUserRmbRS) ProtoMessage()    {}

func (m *GetUserRmbRS) GetUserId() uint64 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *GetUserRmbRS) GetRmb() uint64 {
	if m != nil && m.Rmb != nil {
		return *m.Rmb
	}
	return 0
}

func (m *GetUserRmbRS) GetErrInfo() *MessageType.ErrorInfo {
	if m != nil {
		return m.ErrInfo
	}
	return nil
}

type ChargeUserRmbRQ struct {
	UserId           *uint64 `protobuf:"varint,1,req,name=user_id" json:"user_id,omitempty"`
	SectionId        *uint64 `protobuf:"varint,2,req,name=section_id" json:"section_id,omitempty"`
	TradeType        *uint32 `protobuf:"varint,3,req,name=trade_type" json:"trade_type,omitempty"`
	TradeNo          *uint64 `protobuf:"varint,4,req,name=trade_no" json:"trade_no,omitempty"`
	Amount           *uint64 `protobuf:"varint,5,req,name=amount" json:"amount,omitempty"`
	Descript         []byte  `protobuf:"bytes,6,req,name=descript" json:"descript,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ChargeUserRmbRQ) Reset()         { *m = ChargeUserRmbRQ{} }
func (m *ChargeUserRmbRQ) String() string { return proto.CompactTextString(m) }
func (*ChargeUserRmbRQ) ProtoMessage()    {}

func (m *ChargeUserRmbRQ) GetUserId() uint64 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *ChargeUserRmbRQ) GetSectionId() uint64 {
	if m != nil && m.SectionId != nil {
		return *m.SectionId
	}
	return 0
}

func (m *ChargeUserRmbRQ) GetTradeType() uint32 {
	if m != nil && m.TradeType != nil {
		return *m.TradeType
	}
	return 0
}

func (m *ChargeUserRmbRQ) GetTradeNo() uint64 {
	if m != nil && m.TradeNo != nil {
		return *m.TradeNo
	}
	return 0
}

func (m *ChargeUserRmbRQ) GetAmount() uint64 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

func (m *ChargeUserRmbRQ) GetDescript() []byte {
	if m != nil {
		return m.Descript
	}
	return nil
}

type ChargeUserRmbRS struct {
	UserId           *uint64                `protobuf:"varint,1,req,name=user_id" json:"user_id,omitempty"`
	SectionId        *uint64                `protobuf:"varint,2,req,name=section_id" json:"section_id,omitempty"`
	TradeType        *uint32                `protobuf:"varint,3,req,name=trade_type" json:"trade_type,omitempty"`
	TradeNo          *uint64                `protobuf:"varint,4,req,name=trade_no" json:"trade_no,omitempty"`
	Balance          *uint64                `protobuf:"varint,5,req,name=balance" json:"balance,omitempty"`
	ErrInfo          *MessageType.ErrorInfo `protobuf:"bytes,6,opt,name=err_info" json:"err_info,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *ChargeUserRmbRS) Reset()         { *m = ChargeUserRmbRS{} }
func (m *ChargeUserRmbRS) String() string { return proto.CompactTextString(m) }
func (*ChargeUserRmbRS) ProtoMessage()    {}

func (m *ChargeUserRmbRS) GetUserId() uint64 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *ChargeUserRmbRS) GetSectionId() uint64 {
	if m != nil && m.SectionId != nil {
		return *m.SectionId
	}
	return 0
}

func (m *ChargeUserRmbRS) GetTradeType() uint32 {
	if m != nil && m.TradeType != nil {
		return *m.TradeType
	}
	return 0
}

func (m *ChargeUserRmbRS) GetTradeNo() uint64 {
	if m != nil && m.TradeNo != nil {
		return *m.TradeNo
	}
	return 0
}

func (m *ChargeUserRmbRS) GetBalance() uint64 {
	if m != nil && m.Balance != nil {
		return *m.Balance
	}
	return 0
}

func (m *ChargeUserRmbRS) GetErrInfo() *MessageType.ErrorInfo {
	if m != nil {
		return m.ErrInfo
	}
	return nil
}

type ConsumeUserRmbRQ struct {
	UserId           *uint64 `protobuf:"varint,1,req,name=user_id" json:"user_id,omitempty"`
	SectionId        *uint64 `protobuf:"varint,2,req,name=section_id" json:"section_id,omitempty"`
	TradeType        *uint32 `protobuf:"varint,3,req,name=trade_type" json:"trade_type,omitempty"`
	TradeNo          *uint64 `protobuf:"varint,4,req,name=trade_no" json:"trade_no,omitempty"`
	Amount           *uint64 `protobuf:"varint,5,req,name=amount" json:"amount,omitempty"`
	Descript         []byte  `protobuf:"bytes,6,req,name=descript" json:"descript,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ConsumeUserRmbRQ) Reset()         { *m = ConsumeUserRmbRQ{} }
func (m *ConsumeUserRmbRQ) String() string { return proto.CompactTextString(m) }
func (*ConsumeUserRmbRQ) ProtoMessage()    {}

func (m *ConsumeUserRmbRQ) GetUserId() uint64 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *ConsumeUserRmbRQ) GetSectionId() uint64 {
	if m != nil && m.SectionId != nil {
		return *m.SectionId
	}
	return 0
}

func (m *ConsumeUserRmbRQ) GetTradeType() uint32 {
	if m != nil && m.TradeType != nil {
		return *m.TradeType
	}
	return 0
}

func (m *ConsumeUserRmbRQ) GetTradeNo() uint64 {
	if m != nil && m.TradeNo != nil {
		return *m.TradeNo
	}
	return 0
}

func (m *ConsumeUserRmbRQ) GetAmount() uint64 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

func (m *ConsumeUserRmbRQ) GetDescript() []byte {
	if m != nil {
		return m.Descript
	}
	return nil
}

type ConsumeUserRmbRS struct {
	UserId           *uint64                `protobuf:"varint,1,req,name=user_id" json:"user_id,omitempty"`
	SectionId        *uint64                `protobuf:"varint,2,req,name=section_id" json:"section_id,omitempty"`
	TradeType        *uint32                `protobuf:"varint,3,req,name=trade_type" json:"trade_type,omitempty"`
	TradeNo          *uint64                `protobuf:"varint,4,req,name=trade_no" json:"trade_no,omitempty"`
	Balance          *uint64                `protobuf:"varint,5,req,name=balance" json:"balance,omitempty"`
	ErrInfo          *MessageType.ErrorInfo `protobuf:"bytes,6,opt,name=err_info" json:"err_info,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *ConsumeUserRmbRS) Reset()         { *m = ConsumeUserRmbRS{} }
func (m *ConsumeUserRmbRS) String() string { return proto.CompactTextString(m) }
func (*ConsumeUserRmbRS) ProtoMessage()    {}

func (m *ConsumeUserRmbRS) GetUserId() uint64 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *ConsumeUserRmbRS) GetSectionId() uint64 {
	if m != nil && m.SectionId != nil {
		return *m.SectionId
	}
	return 0
}

func (m *ConsumeUserRmbRS) GetTradeType() uint32 {
	if m != nil && m.TradeType != nil {
		return *m.TradeType
	}
	return 0
}

func (m *ConsumeUserRmbRS) GetTradeNo() uint64 {
	if m != nil && m.TradeNo != nil {
		return *m.TradeNo
	}
	return 0
}

func (m *ConsumeUserRmbRS) GetBalance() uint64 {
	if m != nil && m.Balance != nil {
		return *m.Balance
	}
	return 0
}

func (m *ConsumeUserRmbRS) GetErrInfo() *MessageType.ErrorInfo {
	if m != nil {
		return m.ErrInfo
	}
	return nil
}

type ExchangeUserRmbForDiamondRQ struct {
	UserId           *uint64 `protobuf:"varint,1,req,name=user_id" json:"user_id,omitempty"`
	SectionId        *uint64 `protobuf:"varint,2,req,name=section_id" json:"section_id,omitempty"`
	TradeType        *uint32 `protobuf:"varint,3,req,name=trade_type" json:"trade_type,omitempty"`
	TradeNo          *uint64 `protobuf:"varint,4,req,name=trade_no" json:"trade_no,omitempty"`
	ExchangeType     *uint32 `protobuf:"varint,5,req,name=exchange_type" json:"exchange_type,omitempty"`
	Amount           *uint64 `protobuf:"varint,6,req,name=amount" json:"amount,omitempty"`
	Descript         []byte  `protobuf:"bytes,7,req,name=descript" json:"descript,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ExchangeUserRmbForDiamondRQ) Reset()         { *m = ExchangeUserRmbForDiamondRQ{} }
func (m *ExchangeUserRmbForDiamondRQ) String() string { return proto.CompactTextString(m) }
func (*ExchangeUserRmbForDiamondRQ) ProtoMessage()    {}

func (m *ExchangeUserRmbForDiamondRQ) GetUserId() uint64 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *ExchangeUserRmbForDiamondRQ) GetSectionId() uint64 {
	if m != nil && m.SectionId != nil {
		return *m.SectionId
	}
	return 0
}

func (m *ExchangeUserRmbForDiamondRQ) GetTradeType() uint32 {
	if m != nil && m.TradeType != nil {
		return *m.TradeType
	}
	return 0
}

func (m *ExchangeUserRmbForDiamondRQ) GetTradeNo() uint64 {
	if m != nil && m.TradeNo != nil {
		return *m.TradeNo
	}
	return 0
}

func (m *ExchangeUserRmbForDiamondRQ) GetExchangeType() uint32 {
	if m != nil && m.ExchangeType != nil {
		return *m.ExchangeType
	}
	return 0
}

func (m *ExchangeUserRmbForDiamondRQ) GetAmount() uint64 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

func (m *ExchangeUserRmbForDiamondRQ) GetDescript() []byte {
	if m != nil {
		return m.Descript
	}
	return nil
}

type ExchangeUserRmbForDiamondRS struct {
	UserId           *uint64                `protobuf:"varint,1,req,name=user_id" json:"user_id,omitempty"`
	SectionId        *uint64                `protobuf:"varint,2,req,name=section_id" json:"section_id,omitempty"`
	TradeType        *uint32                `protobuf:"varint,3,req,name=trade_type" json:"trade_type,omitempty"`
	TradeNo          *uint64                `protobuf:"varint,4,req,name=trade_no" json:"trade_no,omitempty"`
	ExchangeType     *uint32                `protobuf:"varint,5,req,name=exchange_type" json:"exchange_type,omitempty"`
	RmbBalance       *uint64                `protobuf:"varint,6,req,name=rmb_balance" json:"rmb_balance,omitempty"`
	Diamond          *uint64                `protobuf:"varint,7,req,name=diamond" json:"diamond,omitempty"`
	ErrInfo          *MessageType.ErrorInfo `protobuf:"bytes,8,opt,name=err_info" json:"err_info,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *ExchangeUserRmbForDiamondRS) Reset()         { *m = ExchangeUserRmbForDiamondRS{} }
func (m *ExchangeUserRmbForDiamondRS) String() string { return proto.CompactTextString(m) }
func (*ExchangeUserRmbForDiamondRS) ProtoMessage()    {}

func (m *ExchangeUserRmbForDiamondRS) GetUserId() uint64 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *ExchangeUserRmbForDiamondRS) GetSectionId() uint64 {
	if m != nil && m.SectionId != nil {
		return *m.SectionId
	}
	return 0
}

func (m *ExchangeUserRmbForDiamondRS) GetTradeType() uint32 {
	if m != nil && m.TradeType != nil {
		return *m.TradeType
	}
	return 0
}

func (m *ExchangeUserRmbForDiamondRS) GetTradeNo() uint64 {
	if m != nil && m.TradeNo != nil {
		return *m.TradeNo
	}
	return 0
}

func (m *ExchangeUserRmbForDiamondRS) GetExchangeType() uint32 {
	if m != nil && m.ExchangeType != nil {
		return *m.ExchangeType
	}
	return 0
}

func (m *ExchangeUserRmbForDiamondRS) GetRmbBalance() uint64 {
	if m != nil && m.RmbBalance != nil {
		return *m.RmbBalance
	}
	return 0
}

func (m *ExchangeUserRmbForDiamondRS) GetDiamond() uint64 {
	if m != nil && m.Diamond != nil {
		return *m.Diamond
	}
	return 0
}

func (m *ExchangeUserRmbForDiamondRS) GetErrInfo() *MessageType.ErrorInfo {
	if m != nil {
		return m.ErrInfo
	}
	return nil
}

type ExchangeUserRmbForDiamondFailed struct {
	UserId           *uint64 `protobuf:"varint,1,req,name=user_id" json:"user_id,omitempty"`
	AwardId          *int32  `protobuf:"varint,2,req,name=award_id" json:"award_id,omitempty"`
	DiamondCount     *int32  `protobuf:"varint,3,req,name=diamond_count" json:"diamond_count,omitempty"`
	RoomId           *int32  `protobuf:"varint,4,req,name=room_id" json:"room_id,omitempty"`
	OrderType        *int32  `protobuf:"varint,5,req,name=order_type" json:"order_type,omitempty"`
	OrderNo          *uint64 `protobuf:"varint,6,req,name=order_no" json:"order_no,omitempty"`
	SectionId        *uint64 `protobuf:"varint,7,req,name=section_id" json:"section_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ExchangeUserRmbForDiamondFailed) Reset()         { *m = ExchangeUserRmbForDiamondFailed{} }
func (m *ExchangeUserRmbForDiamondFailed) String() string { return proto.CompactTextString(m) }
func (*ExchangeUserRmbForDiamondFailed) ProtoMessage()    {}

func (m *ExchangeUserRmbForDiamondFailed) GetUserId() uint64 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *ExchangeUserRmbForDiamondFailed) GetAwardId() int32 {
	if m != nil && m.AwardId != nil {
		return *m.AwardId
	}
	return 0
}

func (m *ExchangeUserRmbForDiamondFailed) GetDiamondCount() int32 {
	if m != nil && m.DiamondCount != nil {
		return *m.DiamondCount
	}
	return 0
}

func (m *ExchangeUserRmbForDiamondFailed) GetRoomId() int32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

func (m *ExchangeUserRmbForDiamondFailed) GetOrderType() int32 {
	if m != nil && m.OrderType != nil {
		return *m.OrderType
	}
	return 0
}

func (m *ExchangeUserRmbForDiamondFailed) GetOrderNo() uint64 {
	if m != nil && m.OrderNo != nil {
		return *m.OrderNo
	}
	return 0
}

func (m *ExchangeUserRmbForDiamondFailed) GetSectionId() uint64 {
	if m != nil && m.SectionId != nil {
		return *m.SectionId
	}
	return 0
}

func init() {
	proto.RegisterEnum("UserRmbRpcDef.ENUM_USER_RMB_ORDER_TYPE", ENUM_USER_RMB_ORDER_TYPE_name, ENUM_USER_RMB_ORDER_TYPE_value)
	proto.RegisterEnum("UserRmbRpcDef.ENUM_USER_RMB_EXCHANGE_TYPE", ENUM_USER_RMB_EXCHANGE_TYPE_name, ENUM_USER_RMB_EXCHANGE_TYPE_value)
}
